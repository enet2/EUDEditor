Type:16,False,False,False
LocationAngleஐFalse
ElementsCount:2
Type:17,False,False,False
ElementsCount:2
Type:8,False,False,False
act:CreateVariableWithNoini
originஐ6
ElementsCount:0
END
Type:8,False,False,False
act:CreateVariableWithNoini
destஐ6
ElementsCount:0
END
END
Type:18,False,False,False
ElementsCount:2
Type:21,False,False,False
/*ToolTipஐ*/ஐTrue
ElementsCount:1
Type:22,False,False,False
ElementsCount:2
Type:21,False,False,False
KoreanஐKoreanஐFalse
ElementsCount:1
Type:22,False,False,False
ElementsCount:4
Type:8,False,False,False
act:CreateVariableWithNoini
originஐ6
ElementsCount:0
END
Type:8,False,False,False
act:RawCode
을 기준으로
ElementsCount:0
END
Type:8,False,False,False
act:CreateVariableWithNoini
destஐ6
ElementsCount:0
END
Type:8,False,False,False
act:RawCode
간의 각도를 반환합니다.
ElementsCount:0
END
END
END
Type:21,False,False,False
EnglishஐEnglishஐFalse
ElementsCount:1
Type:22,False,False,False
ElementsCount:0
END
END
END
END
Type:8,False,False,False
act:RawCode
const locOrigin, locDest = origin * 5, dest * 5;
DoActions(list(
locOrigin.AddNumber(EPD(0x58DC60)),
locDest.AddNumber(EPD(0x58DC60)),
));

const x1 = dwread_epd(locOrigin);
const x3 = dwread_epd(locDest);
DoActions(list(
locOrigin.AddNumber(1),
locDest.AddNumber(1),
));
const y1 = dwread_epd(locOrigin);
const y3 = dwread_epd(locDest);
DoActions(list(
locOrigin.AddNumber(1),
locDest.AddNumber(1),
));
const x2 = dwread_epd(locOrigin);
const x4 = dwread_epd(locDest);
DoActions(list(
locOrigin.AddNumber(1),
locDest.AddNumber(1),
));
const y2 = dwread_epd(locOrigin);
const y4 = dwread_epd(locDest);

const ox, oy = (x1+x2)/2, (y1+y2)/2;
const dx, dy = (x3+x4)/2, (y3+y4)/2;

return atan2((dx - ox), (oy - dy));
ElementsCount:0
END
END
END
